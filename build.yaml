---
env:
  APP_VERSION: 1.0.0
  BUILD_VERSION: ${APP_VERSION}-${ARTISAN_REF}
  ART_GROUP: lib
  APP_NAME: telemetry
  CGO_ENABLED: 0
#  ART_REG: artr.gdn

labels:
  author: SouthWinds Tech Ltd
  email: info@southwinds.io
  application: OpenTelemetry Host Collector

profiles:
  - name: linux
    default: true
    application: ${APP_NAME}
    type: content/binary
    license: Apache Version 2
    labels:
      platform: linux
    env:
      GOOS: linux
    target: install

  - name: linux-arm
    default: true
    application: ${APP_NAME}
    type: content/binary
    license: Apache Version 2
    labels:
      platform: linux
    env:
      GOOS: linux
    target: install

  - name: mac
    application: ${APP_NAME}
    type: content/binary
    license: Apache Version 2
    labels:
      platform: darwin
    env:
      GOOS: darwin
    target: install

  - name: mac-arm
    application: ${APP_NAME}
    type: content/binary
    license: Apache Version 2
    labels:
      platform: darwin
    env:
      GOOS: darwin
    target: install

functions:
  - name: set-version
    description: set new version reference
    run:
      - bash -c "echo ${ARTISAN_REF} > ${PWD}/version"

  - name: go-build-linux-arm64
    description: builds host collector binary for the linux arm64 platform
    env:
      GOOS: linux
      GOARCH: arm64
    run:
      - $(set-version)
      - rm -rf install/telemetry && install/telem.yaml
      - cp telem.yaml install/
      - go build -ldflags="-X 'southwinds.dev/host-collector/collector.Version=${BUILD_VERSION}'" -o install/telemetry -v

  - name: build-linux-arm64
    description: builds host collector artisan package for the linux arm64 platform
    run:
      - $(set-version)
      - $(go-build-linux-arm64)      
      - art build . -t ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) -p linux-arm
      - art tag ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) ${ART_REG}/${ART_GROUP}/${APP_NAME}:latest

  - name: go-build-linux-amd64
    description: builds host collector binary for the linux amd64 platform
    env:
      GOOS: linux
      GOARCH: amd64
    run:
      - $(set-version)
      - rm -rf install/telemetry && install/telem.yaml
      - cp telem.yaml install/
      - go build -ldflags="-X 'southwinds.dev/host-collector/collector.Version=${BUILD_VERSION}'" -o install/telemetry -v

  - name: build-linux-amd64
    description: builds host collector artisan package for the linux amd64 platform
    run:
      - $(set-version)
      - $(go-build-linux-amd64)      
      - art build . -t ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) -p linux
      - art tag ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) ${ART_REG}/${ART_GROUP}/${APP_NAME}:latest

  - name: go-build-mac
    description: builds host collector binary for the mac platform
    env:
      GOOS: darwin      
    run:
      - $(set-version)
      - rm -rf install/telemetry && install/telem.yaml
      - cp telem.yaml install/
      - go build -ldflags="-X 'southwinds.dev/host-collector/collector.Version=${BUILD_VERSION}'" -o install/telemetry -v

  - name: build-mac
    description: builds host collector artisan package for the mac platform
    run:
      - $(set-version)
      - $(go-build-mac)      
      - art build . -t ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) -p mac
      - art tag ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) ${ART_REG}/${ART_GROUP}/${APP_NAME}:latest

  - name: go-build-mac-arm
    description: builds host collector binary for the mac platform
    env:
      GOOS: darwin
      GOARCH: arm64      
    run:
      - $(set-version)
      - rm -rf install/telemetry && install/telem.yaml
      - cp telem.yaml install/
      - go build -ldflags="-X 'southwinds.dev/host-collector/collector.Version=${BUILD_VERSION}'" -o install/telemetry -v

  - name: build-mac-arm
    description: builds host collector artisan package for the mac arm64 platform
    run:
      - $(set-version)
      - $(go-build-mac-arm)      
      - art build . -t ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) -p mac-arm
      - art tag ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) ${ART_REG}/${ART_GROUP}/${APP_NAME}:latest

  - name: push
    description: push to Artisan registry
    run:
      - art push ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version))
      - art push ${ART_REG}/${ART_GROUP}/${APP_NAME}:latest

  - name: manifest
    run:
      - rm -f ./manifest.md
      - art manifest ${ART_REG}/${ART_GROUP}/${APP_NAME}:$((cat ./version)) -o=mdf

  - name: pkg-linux-amd
    description: builds and publish host collector artisan package for the linux amd64 platform
    run:
      - $(set-version)
      - $(build-linux-amd64)
      - $(manifest)
      - $(push)

  - name: pkg-linux-arm
    description: builds and publish host collector artisan package for the linux arm64 platform
    run:
      - $(set-version)
      - $(build-linux-arm64)
      - $(manifest)
      - $(push)

  - name: pkg-mac
    description: builds and publish host collector artisan package for the mac platform
    run:
      - $(set-version)
      - $(build-mac)
      - $(manifest)
      - $(push)

  - name: pkg-mac-arm
    description: builds and publish host collector artisan package for the mac arm64 platform
    run:
      - $(set-version)
      - $(build-mac-arm)
      - $(manifest)
      - $(push)
...